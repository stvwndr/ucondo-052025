// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UCondoApp.Infra.Data.Contexts;

#nullable disable

namespace UCondoApp.Infra.Data.Migrations
{
    [DbContext(typeof(AccountsChartDbContext))]
    [Migration("20250526161547_InitialForSqlServer")]
    partial class InitialForSqlServer
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UCondoApp.Domain.Entitites.AccountsChart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("accountschartid");

                    b.Property<bool>("AcceptsReleases")
                        .HasColumnType("bit")
                        .HasColumnName("acceptsreleases");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("accounttype");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("code");

                    b.Property<string>("FormattedCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("formattedcode");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<Guid?>("ParentAccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("parentaccountid");

                    b.HasKey("Id")
                        .HasName("pk_accountschart");

                    b.HasIndex("ParentAccountId")
                        .HasDatabaseName("ix_accountschart_parentaccountid");

                    b.ToTable("accountschart", (string)null);
                });

            modelBuilder.Entity("UCondoApp.Domain.Entitites.AccountsChart", b =>
                {
                    b.HasOne("UCondoApp.Domain.Entitites.AccountsChart", "ParentAccount")
                        .WithMany()
                        .HasForeignKey("ParentAccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_accountschart_accountschart_parentaccountid");

                    b.Navigation("ParentAccount");
                });
#pragma warning restore 612, 618
        }
    }
}
